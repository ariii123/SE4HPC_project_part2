name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        submodules: true  # Clona anche i submoduli

    - name: Cache apt packages
      uses: actions/cache@v2
      id: cache-apt-packages
      with:
        path: "/var/cache/apt"
        key: ${{ runner.os }}-apt-cache
        restore-keys: ${{ runner.os }}-apt-cache

    - name: Cache apt lists
      uses: actions/cache@v2
      with:
        path: /var/lib/apt/lists
        key: ${{ runner.os }}-apt-lists
        restore-keys: ${{ runner.os }}-apt-lists


#    - name: Cache singularity binaries
#      id: cache-singularity
#      uses: actions/cache@v2
#      with:
#        path: /usr/local/bin/singularity
#        key: ${{ runner.os }}-singularity-${{ hashFiles('**/singularity-version.txt') }}
#        restore_keys: |
#          ${{ runner.os }}-singularity-

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y $(cat apt-packages.txt)
      shell: bash

    - name: Update Submodules
      run: |
        git submodule update --init --recursive
      shell: bash

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build

    - name: Run Tests
      run: ctest --test-dir build
      


#    - name: Setup Singularity
#      if: steps.cache-singularity.outputs.cache-hit != 'true'
#      uses: eWaterCycle/setup-singularity@v7
#      with:
#        singularity-version: 3.8.3
#      
#    - name: Verify singularity version
#      run: singularity --version
#
#    - name: Build Singularity Container
#      run: singularity build --fakeroot singularity/cont.sif singularity/container.def
#    

